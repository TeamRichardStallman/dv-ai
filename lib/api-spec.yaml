components:
  schemas:
    Answer:
      properties:
        answer_text:
          title: Answer Text
          type: string
        question_id:
          title: Question Id
          type: integer
      required:
      - question_id
      - answer_text
      title: Answer
      type: object
    AnswerModel:
      properties:
        answer_text:
          default: "\uD14C\uC2A4\uD2B8\uC6A9 \uB2F5\uBCC0\uC785\uB2C8\uB2E4."
          title: Answer Text
          type: string
        s3_audio_url:
          default: test/questions/audio_1.mp3
          title: S3 Audio Url
          type: string
        s3_video_url:
          title: S3 Video Url
          type: string
      required:
      - s3_video_url
      title: AnswerModel
      type: object
    AnswerRequest:
      properties:
        answer:
          $ref: '#/components/schemas/AnswerModel'
        interview_method:
          default: VOICE
          enum:
          - CHAT
          - VOICE
          - VIDEO
          title: Interview Method
          type: string
        user_id:
          anyOf:
          - type: integer
          - type: string
          title: User Id
      required:
      - user_id
      - answer
      title: AnswerRequest
      type: object
    AnswerResponse:
      properties:
        answers:
          items:
            $ref: '#/components/schemas/Answer'
          title: Answers
          type: array
      required:
      - answers
      title: AnswerResponse
      type: object
    EvaluationRequest:
      properties:
        answers:
          $ref: '#/components/schemas/AnswerResponse'
        file_paths:
          anyOf:
          - items:
              type: string
            type: array
          - type: 'null'
          default:
          - cover-letters/SK_AI.txt
          title: File Paths
        interview_method:
          default: chat
          enum:
          - chat
          - voice
          - video
          title: Interview Method
          type: string
        interview_mode:
          default: real
          enum:
          - real
          - general
          title: Interview Mode
          type: string
        interview_type:
          default: technical
          enum:
          - technical
          - personal
          title: Interview Type
          type: string
        job_role:
          default: ai
          enum:
          - frontend
          - backend
          - infra
          - ai
          title: Job Role
          type: string
        questions:
          $ref: '#/components/schemas/QuestionsResponse-Input'
        user_id:
          anyOf:
          - type: integer
          - type: string
          title: User Id
      required:
      - user_id
      - questions
      - answers
      title: EvaluationRequest
      type: object
    Feedback:
      properties:
        improvement:
          title: Improvement
          type: string
        strengths:
          title: Strengths
          type: string
        suggestion:
          title: Suggestion
          type: string
      required:
      - strengths
      - improvement
      - suggestion
      title: Feedback
      type: object
    HTTPValidationError:
      properties:
        detail:
          items:
            $ref: '#/components/schemas/ValidationError'
          title: Detail
          type: array
      title: HTTPValidationError
      type: object
    OverallScore:
      properties:
        feedback:
          title: Feedback
          type: string
        score:
          title: Score
          type: integer
      required:
      - score
      - feedback
      title: OverallScore
      type: object
    PersonalAnswerEvaluation:
      properties:
        feedback:
          $ref: '#/components/schemas/Feedback'
        question_id:
          title: Question Id
          type: integer
        scores:
          $ref: '#/components/schemas/PersonalScores'
      required:
      - question_id
      - scores
      - feedback
      title: PersonalAnswerEvaluation
      type: object
    PersonalEvaluationResponse:
      properties:
        answer_evaluations:
          items:
            $ref: '#/components/schemas/PersonalAnswerEvaluation'
          title: Answer Evaluations
          type: array
        overall_evaluation:
          $ref: '#/components/schemas/PersonalOverallEvaluation'
      required:
      - answer_evaluations
      - overall_evaluation
      title: PersonalEvaluationResponse
      type: object
    PersonalOverallEvaluation:
      properties:
        adaptability:
          $ref: '#/components/schemas/OverallScore'
        company_fit:
          $ref: '#/components/schemas/OverallScore'
        growth_attitude:
          $ref: '#/components/schemas/OverallScore'
        interpersonal_skills:
          $ref: '#/components/schemas/OverallScore'
      required:
      - company_fit
      - adaptability
      - interpersonal_skills
      - growth_attitude
      title: PersonalOverallEvaluation
      type: object
    PersonalScores:
      properties:
        accountability:
          $ref: '#/components/schemas/ScoreDetail'
        communication:
          $ref: '#/components/schemas/ScoreDetail'
        growth_mindset:
          $ref: '#/components/schemas/ScoreDetail'
        problem_solving:
          $ref: '#/components/schemas/ScoreDetail'
        teamwork:
          $ref: '#/components/schemas/ScoreDetail'
      required:
      - teamwork
      - communication
      - problem_solving
      - accountability
      - growth_mindset
      title: PersonalScores
      type: object
    Question:
      properties:
        key_terms:
          items:
            type: string
          title: Key Terms
          type: array
        question:
          $ref: '#/components/schemas/QuestionDeatil'
        question_excerpt:
          anyOf:
          - type: string
          - type: 'null'
          title: Question Excerpt
        question_id:
          title: Question Id
          type: integer
        question_intent:
          title: Question Intent
          type: string
      required:
      - question_id
      - question
      - question_intent
      - key_terms
      title: Question
      type: object
    QuestionDeatil:
      properties:
        question_text:
          title: Question Text
          type: string
        s3_audio_url:
          anyOf:
          - type: string
          - type: 'null'
          title: S3 Audio Url
        s3_video_url:
          anyOf:
          - type: string
          - type: 'null'
          title: S3 Video Url
      required:
      - question_text
      title: QuestionDeatil
      type: object
    QuestionsRequest:
      properties:
        file_paths:
          anyOf:
          - items:
              type: string
            type: array
          - type: 'null'
          default:
          - cover-letters/cover_letter_01.txt
          title: File Paths
        interview_method:
          default: chat
          enum:
          - chat
          - voice
          - video
          title: Interview Method
          type: string
        interview_mode:
          default: real
          enum:
          - real
          - general
          title: Interview Mode
          type: string
        interview_type:
          default: technical
          enum:
          - technical
          - personal
          title: Interview Type
          type: string
        job_role:
          default: ai
          enum:
          - frontend
          - backend
          - infra
          - ai
          title: Job Role
          type: string
        question_count:
          default: 3
          title: Question Count
          type: integer
        user_id:
          anyOf:
          - type: integer
          - type: string
          title: User Id
      required:
      - user_id
      title: QuestionsRequest
      type: object
    QuestionsResponse-Input:
      properties:
        questions:
          items:
            $ref: '#/components/schemas/Question'
          title: Questions
          type: array
      required:
      - questions
      title: QuestionsResponse
      type: object
    QuestionsResponse-Output:
      properties:
        questions:
          items:
            $ref: '#/components/schemas/Question'
          title: Questions
          type: array
      required:
      - questions
      title: QuestionsResponse
      type: object
    ScoreDetail:
      properties:
        rationale:
          title: Rationale
          type: string
        score:
          title: Score
          type: integer
      required:
      - score
      - rationale
      title: ScoreDetail
      type: object
    TechnicalAnswerEvaluation:
      properties:
        feedback:
          $ref: '#/components/schemas/Feedback'
        question_id:
          title: Question Id
          type: integer
        scores:
          $ref: '#/components/schemas/TechnicalScores'
      required:
      - question_id
      - scores
      - feedback
      title: TechnicalAnswerEvaluation
      type: object
    TechnicalEvaluationResponse:
      properties:
        answer_evaluations:
          items:
            $ref: '#/components/schemas/TechnicalAnswerEvaluation'
          title: Answer Evaluations
          type: array
        overall_evaluation:
          $ref: '#/components/schemas/TechnicalOverallEvaluation'
      required:
      - answer_evaluations
      - overall_evaluation
      title: TechnicalEvaluationResponse
      type: object
    TechnicalOverallEvaluation:
      properties:
        growth_potential:
          $ref: '#/components/schemas/OverallScore'
        job_fit:
          $ref: '#/components/schemas/OverallScore'
        technical_depth:
          $ref: '#/components/schemas/OverallScore'
        work_attitude:
          $ref: '#/components/schemas/OverallScore'
      required:
      - job_fit
      - growth_potential
      - work_attitude
      - technical_depth
      title: TechnicalOverallEvaluation
      type: object
    TechnicalScores:
      properties:
        appropriate_response:
          $ref: '#/components/schemas/ScoreDetail'
        consistency:
          $ref: '#/components/schemas/ScoreDetail'
        grammatical_errors:
          $ref: '#/components/schemas/ScoreDetail'
        key_terms:
          $ref: '#/components/schemas/ScoreDetail'
        logical_flow:
          $ref: '#/components/schemas/ScoreDetail'
      required:
      - appropriate_response
      - logical_flow
      - key_terms
      - consistency
      - grammatical_errors
      title: TechnicalScores
      type: object
    ValidationError:
      properties:
        loc:
          items:
            anyOf:
            - type: string
            - type: integer
          title: Location
          type: array
        msg:
          title: Message
          type: string
        type:
          title: Error Type
          type: string
      required:
      - loc
      - msg
      - type
      title: ValidationError
      type: object
info:
  description: "\n        Devterview AI API\uB294 \uAC1C\uBC1C\uC790 \uBA74\uC811\uC744\
    \ \uC704\uD55C \uC9C8\uBB38 \uC0DD\uC131\uACFC \uD3C9\uAC00\uB97C \uC218\uD589\
    \uD558\uB294 API\uC785\uB2C8\uB2E4.\n        \uC774 API\uB294 \uC9C0\uC6D0\uC790\
    \uC758 \uC790\uC18C\uC11C\uC640 \uBA74\uC811 \uB370\uC774\uD130\uB97C \uAE30\uBC18\
    \uC73C\uB85C \uB9DE\uCDA4\uD615 \uBA74\uC811 \uC9C8\uBB38\uC744 \uC0DD\uC131\uD558\
    \uACE0,\n        \uC9C0\uC6D0\uC790\uC758 \uB2F5\uBCC0\uC5D0 \uB300\uD55C \uD3C9\
    \uAC00\uB97C \uC81C\uACF5\uD569\uB2C8\uB2E4.\n\n        \uC8FC\uC694 \uAE30\uB2A5\
    :\n        - \uC790\uC18C\uC11C\uB97C \uAE30\uBC18\uC73C\uB85C \uD55C \uB9DE\uCDA4\
    \uD615 \uBA74\uC811 \uC9C8\uBB38 \uC0DD\uC131\n        - \uAE30\uC220\uC801, \uC131\
    \uACA9\uC801 \uBA74\uC811 \uD3C9\uAC00\n        - \uB2F5\uBCC0\uC5D0 \uB300\uD55C\
    \ \uC138\uBD80\uC801\uC778 \uD53C\uB4DC\uBC31 \uC81C\uACF5\n        - \uC0AC\uC6A9\
    \uC790 \uC815\uC758 \uAC00\uB2A5\uD55C \uBA74\uC811 \uC720\uD615\uACFC \uC9C1\uBB34\
    \uC5D0 \uB530\uB978 \uC9C8\uBB38 \uBC0F \uD3C9\uAC00\n\n        \uC774 API\uB294\
    \ \uB2E4\uC591\uD55C \uC9C1\uBB34(\uD504\uB860\uD2B8\uC5D4\uB4DC, \uBC31\uC5D4\
    \uB4DC, \uD074\uB77C\uC6B0\uB4DC, AI \uB4F1)\uC640 \uB2E4\uC591\uD55C \uBA74\uC811\
    \ \uBC29\uC2DD(\uC2E4\uC804 \uBA74\uC811, \uBAA8\uC758 \uBA74\uC811)\uC744\n \
    \       \uC9C0\uC6D0\uD558\uBA70, \uAE30\uC220\uC801\uC778 \uC131\uC7A5 \uAC00\
    \uB2A5\uC131\uACFC \uC5C5\uBB34 \uD0DC\uB3C4\uC5D0 \uB300\uD55C \uC885\uD569\uC801\
    \uC778 \uD3C9\uAC00\uB97C \uC81C\uACF5\uD569\uB2C8\uB2E4.\n        "
  title: Devterview AI API
  version: 1.0.0
openapi: 3.1.0
paths:
  /:
    get:
      operationId: ping__get
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
      summary: Ping
      tags:
      - Common
  /interview/{interview_id}/answer/{question_or_answer_id}:
    post:
      operationId: create_asnwer_text_from_answer_audio_interview__interview_id__answer__question_or_answer_id__post
      parameters:
      - in: path
        name: interview_id
        required: true
        schema:
          title: Interview Id
          type: integer
      - in: path
        name: question_or_answer_id
        required: true
        schema:
          title: Question Or Answer Id
          type: integer
      - in: query
        name: model_name
        required: false
        schema:
          default: whisper
          title: Model Name
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AnswerRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Create Asnwer Text From Answer Audio
      tags:
      - Interview
      - Interview
  /interview/{interview_id}/evaluation:
    post:
      operationId: create_interview_evaluation_interview__interview_id__evaluation_post
      parameters:
      - in: path
        name: interview_id
        required: true
        schema:
          anyOf:
          - type: integer
          - type: string
          title: Interview Id
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EvaluationRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                anyOf:
                - $ref: '#/components/schemas/TechnicalEvaluationResponse'
                - $ref: '#/components/schemas/PersonalEvaluationResponse'
                title: Response Create Interview Evaluation Interview  Interview Id  Evaluation
                  Post
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Create Interview Evaluation
      tags:
      - Interview
      - Interview
  /interview/{interview_id}/evaluation-test:
    post:
      operationId: create_interview_evaluation_test_interview__interview_id__evaluation_test_post
      responses:
        '200':
          content:
            application/json:
              schema:
                anyOf:
                - $ref: '#/components/schemas/TechnicalEvaluationResponse'
                - $ref: '#/components/schemas/PersonalEvaluationResponse'
                title: Response Create Interview Evaluation Test Interview  Interview
                  Id  Evaluation Test Post
          description: Successful Response
      summary: Create Interview Evaluation Test
      tags:
      - Interview
      - Interview
  /interview/{interview_id}/questions:
    post:
      operationId: create_interview_questions_interview__interview_id__questions_post
      parameters:
      - in: path
        name: interview_id
        required: true
        schema:
          anyOf:
          - type: integer
          - type: string
          title: Interview Id
      - in: query
        name: model_name
        required: false
        schema:
          default: openai
          title: Model Name
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QuestionsRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QuestionsResponse-Output'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Create Interview Questions
      tags:
      - Interview
      - Interview
  /interview/{interview_id}/questions-test:
    post:
      operationId: create_interview_questions_test_interview__interview_id__questions_test_post
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QuestionsResponse-Output'
          description: Successful Response
      summary: Create Interview Questions Test
      tags:
      - Interview
      - Interview
